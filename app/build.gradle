plugins {
    id 'com.android.application'
}

// 读取local.properties文件中的签名配置
def keystorePropertiesFile = rootProject.file("local.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// 清理资源目录中的备份文件
task cleanResourceBackups {
    doLast {
        def mipmapAnyDpiDir = file('src/main/res/mipmap-anydpi')
        if (mipmapAnyDpiDir.exists()) {
            mipmapAnyDpiDir.eachFileMatch(~/.*\.bak/) { file ->
                println "Deleting backup file: ${file.name}"
                file.delete()
            }
        }
    }
}

// 在资源合并之前执行清理任务
tasks.whenTaskAdded { task ->
    if (task.name.startsWith('merge') && task.name.endsWith('Resources')) {
        task.dependsOn cleanResourceBackups
    }
}

android {
    namespace 'com.example.qjm'
    compileSdk 34  // 更新为API级别34以支持Android 14

    defaultConfig {
        applicationId "com.example.qjm"
        minSdk 24
        targetSdk 34  // 更新为API级别34以支持Android 14
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // 从local.properties文件读取签名配置
            if (keystoreProperties.containsKey('STORE_FILE')) {
                storeFile file(keystoreProperties['STORE_FILE'])
                storePassword keystoreProperties['STORE_PASSWORD']
                keyAlias keystoreProperties['KEY_ALIAS']
                keyPassword keystoreProperties['KEY_PASSWORD']
            } else {
                // 如果没有配置签名信息，使用调试配置作为后备
                def debugKeystoreFile = file('src/main/keystore/debug.keystore')
                if (debugKeystoreFile.exists()) {
                    storeFile debugKeystoreFile
                    storePassword 'android'
                    keyAlias 'androiddebugkey'
                    keyPassword 'android'
                }
            }
        }
        debug {
            // 检查项目中的调试密钥库是否存在
            def debugKeystoreFile = file('src/main/keystore/debug.keystore')
            if (debugKeystoreFile.exists()) {
                storeFile debugKeystoreFile
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            } else {
                // 检查系统默认的调试密钥库是否存在
                def systemDebugKeystoreFile = file(System.getProperty("user.home") + "/.android/debug.keystore")
                if (systemDebugKeystoreFile.exists()) {
                    storeFile systemDebugKeystoreFile
                    storePassword 'android'
                    keyAlias 'androiddebugkey'
                    keyPassword 'android'
                }
                // 如果都不存在，不设置签名配置，使用Android默认的调试签名
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // 只有当签名配置存在时才设置
            def debugKeystoreFile = file('src/main/keystore/debug.keystore')
            def systemDebugKeystoreFile = file(System.getProperty("user.home") + "/.android/debug.keystore")
            if (debugKeystoreFile.exists() || systemDebugKeystoreFile.exists()) {
                signingConfig signingConfigs.debug
            }
            // 在调试版本中禁用PNG crunching以避免资源编译问题
            crunchPngs false
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // 添加资源处理配置
    aaptOptions {
        // 忽略 PNG 处理错误
        ignoreAssetsPattern = "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    
    // Room components
    implementation "androidx.room:room-runtime:2.4.3"
    annotationProcessor "androidx.room:room-compiler:2.4.3"
    
    // WorkManager
    implementation "androidx.work:work-runtime:2.7.1"
    
    // Gson
    implementation 'com.google.code.gson:gson:2.8.8'
}